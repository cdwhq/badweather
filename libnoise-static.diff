Index: libnoise/noise/lib/Makefile
===================================================================
--- libnoise.orig/noise/lib/Makefile	2009-06-07 18:36:45.000000000 +0200
+++ libnoise/noise/lib/Makefile	2009-06-07 18:52:45.000000000 +0200
@@ -1,7 +1,7 @@
-VPATH=../src/
+VPATH=../src/.libs
 
 .PHONY: all clean
-all: libnoise.a libnoise.la libnoise.so.0.3
+all: libnoise.a libnoise.la
 	-cp $? .
 
 clean:
Index: libnoise/noise/src/Makefile
===================================================================
--- libnoise.orig/noise/src/Makefile	2009-06-07 18:32:25.000000000 +0200
+++ libnoise/noise/src/Makefile	2009-06-07 18:49:20.000000000 +0200
@@ -6,23 +6,16 @@
 DEPENDS=$(SOURCES:.cpp=.d)
 
 # What source objects are we building?
-OBJECTS=$(SOURCES:.cpp=.o)
+OBJECTS=$(SOURCES:.cpp=.lo)
 
 .PHONY: all clean cleandeps cleanobjs cleanlib libnoise libnoise.so libnoise.so.0
 
 # hooks for future makefiles being able to make multiple SOs, or older SOs
-libnoise: libnoise.so libnoise.a libnoise.la
-libnoise.so: libnoise.so.0
-libnoise.so.0: libnoise.so.0.3
+libnoise: libnoise.la
 
 # Real build targets
-libnoise.so.0.3: $(OBJECTS)
-	$(LIBTOOL) --mode=link $(CXX) $(LDFLAGS) -shared -Wl,-soname=libnoise.so.0 -o $@ $(OBJECTS:.o=.lo)
-
-libnoise.a: $(OBJECTS)
-	$(LIBTOOL) --mode=link $(CXX) $(LDFLAGS) -o $@ $(OBJECTS)
 libnoise.la: $(OBJECTS)
-	$(LIBTOOL) --mode=link $(CXX) $(LDFLAGS) -o $@ $(OBJECTS:.o=.lo)
+	$(LIBTOOL) --mode=link $(CXX) -static $(LDFLAGS) -o $@ $(OBJECTS:.o=.lo)
 
 clean:	cleandeps cleanobjs cleanlib
 cleandeps:
@@ -45,11 +38,11 @@
          rm -f $@.$$$$
 
 # C and C++ libtool (rather than raw CXX/CC) use
-%.o %.lo: %.cpp
-	$(LIBTOOL) --mode=compile $(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $< -o $(@:.lo=.o)
+%.lo: %.cpp
+	$(LIBTOOL) --mode=compile $(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $< -o $@
 
-%.o %.lo: %.c
-	$(LIBTOOL) --mode=compile $(CC) $(CPPFLAGS) $(CFLAGS) -c $< -o $(@:.lo=.o)
+%.lo: %.c
+	$(LIBTOOL) --mode=compile $(CC) $(CPPFLAGS) $(CFLAGS) -c $< -o $@
 
 # If dependancies have never been built this will produce a horde of
 # "file not found" warnings and *then* build the deps.  Very odd.
